services:

    # Indexer Service
  indexer-scraper-e2e:
    build:
      context: .
    container_name: indexer_service_e2e
    volumes:
      - .:/usr/src/app
      - indexer-e2e-node-modules:/usr/src/app/node_modules
    command: [sh, -c, "pnpm db:indexer-database:migrate:run && pnpm test"]
    env_file:
      - ".env.test"
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: user
      DATABASE_PASSWORD: password
      DATABASE_NAME: mydatabase
    tty: true
    depends_on:
      - postgres
      - redis

  # PostgreSQL Service
  postgres:
    image: postgres:13-alpine
    container_name: postgres_e2e
    env_file:
      - .env.test
    environment:
      TZ: GMT
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - indexer-e2e-pgdata:/var/lib/postgresql/data
    ports:
      - 5432:5432

  # Redis Service
  redis:
    image: redis:6-alpine
    container_name: redis_cache_e2e
    volumes:
      - indexer-e2e-redis-volume:/data
    ports:
      - 6379:6379

  # Express API Service
  # indexer-api:
  #   build:
  #     context: .
  #   container_name: indexer_api
  #   volumes:
  #     # - .:/usr/src/app
  #     - indexer-api-node-modules:/usr/src/app/node_modules
  #   ports:
  #     - ${PORT}:${PORT}
  #   command: pnpm start:indexer-api
  #   env_file:
  #     - .env
  #   environment:
  #     INDEXER_REDIS_HOST: redis
  #     DATABASE_HOST: postgres
  #   depends_on:
  #     - postgres
  #     - redis

volumes:
  indexer-e2e-node-modules:
  # indexer-api-node-modules:
  indexer-e2e-pgdata:
  indexer-e2e-redis-volume:
